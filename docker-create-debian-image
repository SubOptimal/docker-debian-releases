#!/bin/bash

set -e -o pipefail

usage="Usage: $0 [-h] [-k] [-i <image name>] [-q] [-t <variant>] [distribution [architecture]]"

keepdir=false
qemu=false

while getopts ":ki:qt:h" opt; do
    case "$opt" in
        k) keepdir=true;;
        i) image="$OPTARG";;
        q) qemu=true;;
        t) variant="$OPTARG";;
        h) echo "$usage"; exit 0;;
        \?) printf "Invalid argument\\n%s\\n" "$usage" >&2; exit 1;;
    esac
done
shift $((OPTIND-1))

dist=${1-jessie}
arch=${2-amd64}

case "$dist" in
    potato)  mirror=http://archive.debian.org/debian;;
    woody)   mirror=http://archive.debian.org/debian;;
    sarge)   mirror=http://archive.debian.org/debian;;
    etch)    mirror=http://archive.debian.org/debian;;
    lenny)   mirror=http://archive.debian.org/debian;;
    squeeze) mirror=http://archive.debian.org/debian;;
    *)       mirror=http://deb.debian.org/debian;;
esac

# Create tmp dir, setup cleanup:
dir="$(mktemp -d --suffix=-rootfs -p "$PWD")"
function cleanup {
    if ! "$keepdir"; then
        sudo umount -l "$dir/sys" "$dir/proc" 2>/dev/null || :
        sudo rm -rf "$dir"
    fi
}
trap cleanup EXIT

# Build debootstrap commnad-line

name=debian-${dist}-${arch}
image=${image-"$name"}

cmd=(sudo)
if "$qemu"; then
    cmd+=(qemu-debootstrap)
else
    cmd+=(debootstrap)
fi
if [ -n "$variant" ]; then
   cmd+=("--variant=$variant")
fi
cmd+=("--no-check-gpg" "--arch=$arch" "$dist" "$dir" "$mirror")

# Run:

set -x

: name="$name", image="$image"

if ! "${cmd[@]}"; then
     cat "$dir/debootstrap/debootstrap.log"
     false
fi

# Create msg:
repo="https://github.com/lpenz/docker-debian-releases"
for releasefile in "$dir"/var/*/apt/lists/*_Release; do
    description=$(sed -n 's@^Description: \(.*\)$@\1@p' "$releasefile")
    msg="${description}, $arch image created by $repo"
    break
done
if [ -z "$msg" ]; then
    if [ -f "$dir/usr/lib/os-release" ]; then
        # shellcheck disable=SC1090
        . "$dir/usr/lib/os-release"
        msg="$PRETTY_NAME for $arch image created by $repo"
    else
        msg="Created by $repo"
    fi
fi

# Remove apt lists (too big):
if [ -d "$dir/var/lib/apt/lists" ]; then
    sudo find "$dir/var/lib/apt/lists" -type f -delete
elif [ -d "$dir/var/lib/apt/lists" ]; then
    sudo find "$dir/var/state/apt/lists" -type f -delete
fi

# Create .tar and import docker image:
sudo tar -C "$dir" -c . | \
    docker import \
           -m "$msg" \
           -c 'CMD ["bash"]' \
           - "$image"
docker run --rm "$image" /bin/bash -c "true"
docker inspect "$image"
